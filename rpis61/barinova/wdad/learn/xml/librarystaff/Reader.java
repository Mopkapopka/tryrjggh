package rpis61.barinova.wdad.learn.xml.librarystaff;//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.01.09 at 08:29:37 PM SAMT 
//

import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "bookOrTakedate"
})
@XmlRootElement(name = "reader")
public class Reader  implements Serializable {

    @XmlAttribute(name = "firstname")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String firstname;
    @XmlAttribute(name = "secondname", required = true)
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String secondname;
    @XmlElements({
        @XmlElement(name = "book", type = Book.class),
        @XmlElement(name = "takedate", type = Takedate.class)
    })




    protected List<Object> bookOrTakedate;

    /**
     * Gets the value of the firstname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFirstname() {
        return firstname;
    }

    /**
     * Sets the value of the firstname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFirstname(String value) {
        this.firstname = value;
    }

    /**
     * Gets the value of the secondname property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSecondname() {
        return secondname;
    }

    /**
     * Sets the value of the secondname property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSecondname(String value) {
        this.secondname = value;
    }

    /**
     * Gets the value of the bookOrTakedate property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the bookOrTakedate property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBookOrTakedate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Book }
     * {@link Takedate }
     * 
     * 
     */
    private void update_books_list(){
        bookOrTakedate.clear();
        for (int i =0; i<takenBooks.size(); i++){
            bookOrTakedate.add(takenBooks.get(i));
            bookOrTakedate.add(takeDates.get(i));
        }

    }

    public List<Object> getBookOrTakedate() {
        if (bookOrTakedate == null) {
            bookOrTakedate = new ArrayList<Object>();
        }
        return this.bookOrTakedate;
    }

    public Reader(String firstName, String secondName) {
        this.firstname=firstName;
        this.secondname = secondName;
        takenBooks = new ArrayList<>();
        takeDates  = new ArrayList<>();
        bookOrTakedate = new ArrayList<>();
    }

    Reader(){
        this(null, null);
    }
    @XmlTransient
    private ArrayList<Book> takenBooks;
    @XmlTransient
    private ArrayList<Takedate> takeDates;
    @XmlTransient
    private int id;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public void takeBook(Book book){
        takenBooks.add(book);
        StringBuilder sb = new StringBuilder().append(LocalDate.now().getYear())
                .append("-").append(LocalDate.now().getMonth().getValue())
                .append("-").append(LocalDate.now().getDayOfMonth());
        System.out.println(sb);
        takeDates.add(new Takedate(sb.toString()) );
        update_books_list();
    }

    public boolean returnBook(Book book){
        for (Book b : takenBooks){
            if(b.getName().equals(book.getName()) &&  b.getAuthor().equals(book.getAuthor())){
                takeDates.remove(takenBooks.indexOf(b));
                takenBooks.remove(b);
                update_books_list();
                return true;
            }
        }
        return false;
    }

    public boolean isDebtor(){
        for (var date : takeDates) {
            if ((int)(LocalDate.now().toEpochDay() - date.toEpochDay() )> 14)
                return true;
        }
        return false;
    }


    public ArrayList<Book> getTakenBooks() {
        return takenBooks;
    }
    public void setTakenBooks(ArrayList<Book> takenBooks) {
        this.takenBooks = takenBooks;
    }

    public ArrayList<Takedate> getTakeDates() {
        return takeDates;
    }

    public void setTakeDates(ArrayList<Takedate> takeDates) {
        this.takeDates = takeDates;
    }


}
